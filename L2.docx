SQL Interview questions-f
Q 1. Query is long running, what steps u will take?  

Check if the number of records being selected, inserted, deleted or updated is more than usual. If not, look for better execution plans or if the advisor recommends creating an index.

Q 2. What is a deadlock? How will you go about resolving deadlocks?
Deadlock is a situation where multiple processes are blocked waiting for resources held by each other. Imagine two people holding onto each other's coats - neither can proceed until the other lets go.
Resolving deadlocks involves:
Prevention: Ensuring conditions for deadlock never arise (e.g., requesting resources in a specific order).
Avoidance: Predicting potential deadlocks and allocating resources strategically.
Detection and Recovery: Identifying deadlocks when they occur and restarting or terminating involved processes.
Q 3. What is Constraints and its types?

NOT NULL - Ensures that a column cannot have a NULL value
UNIQUE KEY - Ensures that all values in a column are different
PRIMARY KEY - A combination of a NOT NULL and UNIQUE. Uniquely identifies each row in a table
FOREIGN KEY - Prevents actions that would destroy links between tables
CHECK - Ensures that the values in a column satisfies a specific condition
DEFAULT - Sets a default value for a column if no value is specified
CREATE INDEX - Used to create and retrieve data from the database very quickly

Q 4. Different between Primary Key and Unique Key?
Uniqueness:
Primary Key: Guarantees unique identification for every record (no duplicates).
Unique Key: can allow NULL values (one record with NULL).
Enforcement:
Primary Key: Only one record can have the primary key value.
Unique Key: Multiple records can have the same unique key value, as long as it's not NULL.


Q 5. Difference between Delete, Truncate and Drop?

Delete deleted specific rows and locks the affected records, truncate empties the table and drop deletes the table

Q 6. Types of Statements in SQL?
Data Definition Language (DDL): Used to create, modify, and delete database structures like tables, indexes, and users. (e.g., CREATE, ALTER, DROP)
Data Manipulation Language (DML): Used to add, update, and delete data within the database tables. (e.g., INSERT, UPDATE, DELETE)
Data Control Language (DCL): Used to manage user permissions and access control within the database. (e.g., GRANT, REVOKE)
Transaction Control Language (TCL): Used to manage transactions (groups of database operations) ensuring data consistency. (e.g., COMMIT, ROLLBACK)
Data Query Language (DQL) (subset of DML): Used to retrieve and manipulate data from the database. (e.g., SELECT)

Q 7. What is TCL and DCL?
Transactional Control Language – commit, rollback
Data Control Language – Grant, revoke

Q 8. How many methods, we can use to insert the values in table?
There are two main methods to insert values into a table using SQL:
INSERT INTO with VALUES clause: Specifies column values directly without naming the columns.
INSERT INTO with SELECT: Inserts data by selecting from another table or query.
Q 9. Query to insert the values is particular column?
INSERT INTO Table_name
(column_name1, column_name2, … column_namen)
VALUES (value1, value2, … value n)

Q 10. Query to create new table from existing table?

CREATE TABLE New_Table_name AS 
SELECT * FROM Existing_table_Name;

CREATE TABLE new_table_name AS 
SELECT column1, column2, ... (optional: specific columns) 
FROM existing_table_name;

Q 11. Query to create new table from existing table without copying the data?

CREATE TABLE New_table
FROM (SELECT *
FROM Old_table
WHERE column_1 ← [primary key column] = ((SELECT MAX(column_1) FROM Old_table)+1));
-----------------------------------------
CREATE TABLE New_table
FROM (SELECT *
FROM Old_table
WHERE 1=2);
-----------------------------------------
CREATE TABLE New_table
FROM (SELECT *
FROM Old_table
WHERE column_1 is null;


Q 12. Types of functions in SQL. (Particularly Single Row Function- Number, Character(substr & instr), Date Fun., Conversion Function, General Fun (NVL, NVL2))
Aggregate Functions: Operate on groups of data in a table and return a single summarized value. These are commonly used for calculations like SUM, COUNT, AVG, MIN, and MAX.


Scalar Functions: Operate on a single row or value and return a single result. These are used for various data manipulations
Single Row Functions
Date Functions (e.g., CURDATE, YEAR, MONTH, DAY)
General Functions:


NVL: Stands for "Null Value Logic." Replaces NULL values with a specified alternative value.
NVL2: Similar to NVL, but provides a conditional check. It can return different values based on whether the checked value is NULL or not.

Q 13.  Print the emp_name, Salary (with the commission) as Total_Income for all the employees. (If there is no commission only Salary Should print)

SELECT emp_name, COALESCE(Salary + Commission, Salary) AS Total_Income FROM your_table_name;


Q 14. What is Group functions in SQL?
Group functions in SQL are special functions that perform calculations on groups of rows in a table and return a single result for each group. They are often used for summarizing data based on a specific category or criteria.
Here's a breakdown of key concepts related to group functions:
Groups: Rows in a table that share a common value in one or more columns.
Grouping: The process of organizing rows into groups based on a shared characteristic.

Q 15. Difference between ‘Where’ and ‘Having Clause’ (in which condition, we use having clause).
To use Having clause its necessary you used the Clause GROUP BY, both clauses are conditional.
WHERE filters individual rows before grouping, based on any column. HAVING filters groups after grouping, based on aggregate functions (e.g., SUM, COUNT, AVG) applied to those groups.
Q 16. Query to fetch Ename, deptno, Max_Sal from each department from Employee table? 

SELECT Ename, deptno, MAX(Salary) AS Max_sal
FROM Employee
GROUP BY deptno

Q 17. Query to fetch the number of employees, heired every year. ( Columns- ename, hiredate’)
SELECT YEAR(hiredate) AS year_hired, count(*) 
FROM Employee
Group by year_hired;

Q 18. Some scenario-based questions from Joins like below. (mainly Equi join & Inner join)
Scenario: You have two tables: Customers (with customer_id and customer_name) and Orders (with order_id, customer_id, and order_date). You want to find the names of all customers who placed an order in the last month.
Solution (Inner Join):
SELECT c.customer_name, o.order_date
FROM Customers c
INNER JOIN Orders o ON c.customer_id = o.customer_id
WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);
Scenario: You have a table Products (with product_id, product_name, and price) and a table Warehouses (with warehouse_id, product_id, and stock_level). You want to retrieve a list of all products with their current stock level across all warehouses.
Solution (Equi Join):
SELECT p.product_name, SUM(w.stock_level) AS total_stock
FROM Products p
INNER JOIN Warehouses w ON p.product_id = w.product_id
GROUP BY p.product_name;

Q 19. From the Employee and Department table, write a query to fetch the departments where number of employees is greater than 8?

SELECT D.dept_name, count(E.emp_name) AS number_employees
FROM Employee E
JOIN Department D
ON E.deptno = D.deptid
Group by D.dept_name
HAVING number_employees > 8;

Q 20. Types of joines with explanation? 

Inner Join: Matches rows from two tables based on a shared value in a column. Returns only rows with matches in both tables. (e.g., finding customers with orders)
Left Join: Includes all rows from the left table and matching rows from the right table. Fills unmatched values in the right table with NULL. (e.g., listing all customers, even those without orders)
Right Join: Opposite of Left Join. Includes all rows from the right table and matching rows from the left table. Fills unmatched values in the left table with NULL.
Full Join or Outer Join: Combines all rows from both tables, regardless of matches. Includes NULL values for unmatched columns. (e.g., showing all products and warehouses, even if a product isn't in a particular warehouse)

Q 21. What is Index in SQL and types? (with SYNTAX)

An index in SQL is a special data structure that speeds up retrieving data from tables. It's like an organized index in a book that helps you find specific information quickly.
Types of Indexes:
Primary Key: Enforces unique identification for each record and usually creates a clustered index, storing data physically ordered by the key for faster retrieval. (Syntax: Defined during table creation with PRIMARY KEY constraint)


Unique Key: Ensures uniqueness for a column or set of columns but allows NULL values. Creates a non-clustered index, separate from data storage. (Syntax: CREATE UNIQUE INDEX on specific column(s))


Non-clustered Index: Improves query performance by referencing data through the index but stores the index data separately from the actual table data. (Syntax: CREATE INDEX on specific column(s))



Q 22. Difference between Index Scan and  Full table Scan in SQL?
Here's the difference between Index Scan and Full Table Scan in SQL:
Index Scan:
Uses an existing index to efficiently locate relevant rows.
Think of it like using an index in a book to find specific sections quickly.
Faster than full table scans for queries that leverage the indexed column(s).
Full Table Scan:
Examines every row in the table to find matching data.
Like reading every page in a book to find a specific piece of information.
Slower than index scans, especially for large tables.
In essence:
Use an index scan when your query can leverage an existing index to filter or sort data.
A full table scan is used when no relevant index exists or the query doesn't benefit from an index.

Q 23. What is view and its types?
Views in SQL are virtual tables that act like windows into underlying tables. They don't store data themselves but define a customized query to retrieve data from one or more base tables.
Types of Views:
Simple View: Based on a single base table.


Complex View: Involves multiple base tables, often with aggregation functions (GROUP BY, etc.) and filtering logic in the view definition.
Q 24. Query to find 7th highest salary?

SELECT Salary
FROM Employees
ORDER BY Salary DESC
LIMIT 7;

SELECT Salary 
FROM ( SELECT DISTINCT Salary FROM Employees ORDER BY Salary DESC LIMIT 7 ) AS top_salaries;

Q 25. Query to find duplicate rows in table?

SELECT *
FROM your_table_name
GROUP BY column1, column2, ... (all relevant columns)
HAVING COUNT(*) > 1;

Q 26. Query to delete duplicate rows in table?

DELETE FROM your_table_name 
WHERE id NOT IN ( SELECT id FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY column1, column2, ... ORDER BY id) AS row_num 
FROM your_table_name ) AS ranked_data 
WHERE row_num = 1 );

Q 27. Query to fetch last record from the table?
SELECT * 
FROM TableName 
WHERE id=(SELECT max(id) FROM TableName);

Q 28. Query to fetch even/odd rows from the table?

SELECT *
FROM TABLE 
WHERE row_num % 2 = 0;

SELECT *
FROM TABLE 
WHERE row_num % 2 = 1;


Q 29. Rank and Dense rank concepts?
Both RANK and DENSE_RANK are window functions in SQL used to assign a rank or order to rows within a result set based on a specified criteria. Here's a breakdown of their key differences:
RANK:
Assigns a unique rank to each distinct value in the ordering column.
Skips positions in the ranking if there are ties (equal values).
May result in gaps between assigned ranks (e.g., 1, 2, 4, 5).
DENSE_RANK:
Assigns a unique rank to each row in the ordering, regardless of ties.
Does not skip positions in the ranking, even for ties (e.g., 1, 1, 2, 2, 3).
Example:
Imagine a table with employee sales data (EmployeeID, SalesAmount). You want to rank employees by their sales in descending order.
SELECT EmployeeID, SalesAmount, RANK() OVER (ORDER BY SalesAmount DESC) AS SalesRank,
       DENSE_RANK() OVER (ORDER BY SalesAmount DESC) AS DenseRank
FROM your_table_name;
This query will produce a result table with four columns:
EmployeeID: The employee's ID.
SalesAmount: The employee's total sales.
SalesRank: Rank assigned using RANK, with gaps for ties.
DenseRank: Rank assigned using DENSE_RANK, no gaps for ties.


Q 30. Special operators uses (%, _ with like)

% wildcard used to fill any number of characters before or after one string or character
_ wildcard to look for any character, but only one, on the string

 
UNIX Interview questions-
Q 1. How to delete empty lines in a file?

sed (stream editor) to delete lines that match the pattern of having only the beginning (^) and end ($) of the line with nothing in between,
sed -i '/^[[:blank:]]*$/d' file
Sed –i ‘/^*$/d’ file
Sed –i ‘/^\s*$/d’ file
sed '/^$/d' example.txt > newfile.txt

Q 2. How to print the hidden files? 
Ls –a
To print or display hidden files in a Unix/Linux terminal, you can use the ls command with the -a option. Hidden files in Unix/Linux typically start with a dot (.), and the -a option allows ls to show all files, including those whose names begin with a dot.

Q 3. How to display the files in a directory, size less than 4 MB?
find path -type f -size –4M

Q 4. How to transfer files from one application Server to another server?

sftp serviceaccounttarget@targetserver
ask for credentials
sftp username@remote-server
lcd /path/to/local/directory
cd /path/to/remote/directory
put filename
exit

Put absolute_path_/file absolute_target_path
GET source_absolute_path/_file  absolute_target_path 



Q 5. How to connect to DB from Unix Server?

Depends on the type of DB, sqlplus can be used to connect to Oracle databases and db2 to connect to DB2 databases.
sqlcmd -S localhost -U myuser -P mypassword -d mydatabase
mysql -u myuser -p -h localhost -D mydatabase
sqlplus myuser/mypassword@//localhost:1521/myservice

Q 6. What is the first line of the Script (shebang) and what it denotes/indicates?

#! bin/bash  - Tells the computer which interpreter to use while executing the file.

Q 7. How to run a process in background and what is it’s advantage?
Put a & at the end of the command to be run in the background
Advantages of Running a Process in the Background:
Non-blocking: - Parallelism: - Long-Running Tasks: - Scripting and Automation:

Q 8 . How you will find %memory & %CPU utilization? (TOP command and it’s output)
TOP command
HTOP

Q 9. How do you find the number of occurrences of the word in the file? (wc -w)
grep word filename | wc -w

Q 10. How do you delete the files older than 10 days?
find path -mtime +10 -type f -delete

Q 11. How do you find the line count for the matching pattern?
grep string filename | wc -l

Q 12. Write a command to print the lines that ends with the word "specific_word"?
Grep “specific_word$” filename

Q 13. Write a command to print the lines matching with exact word?
Grep exact_word filename

Q 14. Match all words starting with “Particular String”.
Grep “^particular_string” filename
grep -w '^ParticularString' example.txt


Q 15. Match all pattern which starts with q and doesn’t follow by u?
Grep “^q” filename | grep –v “^qu”
grep –iE “^q[^u]” filename
grep "^q" example.txt | grep -v "^qu"

Q 16. To show below and above 2 lines of the matching pattern?
Grep –C2 word filename
Grep –A2 –B2 word filename

Q 17. How to zip and unzip the files?
Zip zipfilename filetozip1 filetozip2
Unzip zipfilename

Q 18. How to display files names which contain given word?
grep -rl word *

Q 19. How to search for multiple matching string in the file?
Grep “string” filename
Open the file with less or vi and you can look for specific strings with /string

Q 20. To delete the file which is having permission 644?
You will need write access to the directory the file is in

Q 21. How to change the permission of any file?
Chmod command with either numeric permissions (1-7) or granting to each specific group (u+w)

Q 22. How to set default permission of any file?  
umask 007

Q 23, What is the default permission newly created file and directory?
Files: 644 – rw-r--r--
Directories: 755 – rwxr-x-r-x

Q 24. Create a 0 byte file with 477 permission?
Touch filename && chmod 477 $_

Q 25. If file content is space separated, then how to show only last field of the file?
awk '{print $NF}’ filename

Q 26. Print all input lines from filename that have more than 4 fields.
awk 'NF > 4 { print $0 }' filename

Q 27. Print the total number of lines in the filename to the screen.
wc -l filename

Q 28. If the files having 4 fields and if any field is blank then delete that particular line?


Q 29. How to replace 4th occurrence of any pattern with given new pattern?
sed -z 's/string/replace/4' mytextfile

Q 30. How to replace the word from the 11th to 19th line only?
sed -i '11,19s/old_word/new_word/g' filename

Q 31. How to replace all the occurrences of any word with given word in a file?
sed 's/old_word/new_word/g' filename

Q 32. How to print from 34th to 45th line with repeating the line?
sed -n '34,45p;45!b;34p;q' filename

Q 33. Write a command to print the lines that do not contain the word "run"?
grep -v 'run' filename

Q 34. What is the difference between ‘cmp’ and ‘diff’ commands?
Cmp compares byte per byte and only show the first mismatch 
while diff show all the lines the files have different

Q 35. How to open the file from 60th line?
tail +60 filename

Q 36. How to search any ERROR string in VI editor and navigate it? (upward & downward)
Here's how to search for "ERROR" strings in VI and navigate them:
Open the file in VI: vi filename
Search for "ERROR" (case-sensitive):
Forward search: Type /ERROR and press Enter. This will take you to the first occurrence of "ERROR".
Backward search: Type ?ERROR and press Enter. This will search backward for the previous "ERROR" from your current position.
Navigate through occurrences:
Forward: Use n (lowercase) to jump to the next "ERROR" occurrence.
Backward: Use N (uppercase) to jump to the previous "ERROR" occurrence.
Q 37. How to copy and delete any line in VI?
Visual block mode: Ctrl-v (select lines), y


Q 38. How to go into Insert mode from Command mode?
type i

Q 39. How to save the changes and exit from VI?
type :wq

Q 40. How to go to 56th line in VI?
Open file, then +55 (Enter)

Q 41. How to replace all occurrences of some specific character? (:%s/oldText/newText/g)
Q 42. How to append a file to current file using VI editor?
Q 43. What is the UNIX command to list files/folders in alphabetical order and sorted with modified time?
Ls -ltr

Q 44. What ‘more’ command does?
Prints the contents of the file on the console.

Q 45. How to display 57th line of the file? (with head and tail command)
Head –57 filename | tail –1

Q 46. What is Zombie Process and how you get Zombie process in unix?
Q 47. What is the command to find maximum memory taking process on the server?
Ps –aux –sort=-%MEM | head -1

Q 48. What is the command to find the currently running process in Unix Server?
Ps or top

Q 49. What is the command to find remaining disk space in the UNIX server?
Df –h directory

Q 50. What is the UNIX command to confirm a remote host is alive or not?
ping

Q 51. What is the method to see command line history?
history

Q 52. What is the command to find if the system is 32 bit or 64 bit?
Uname -i

Q 53. What is the purpose of the “echo” command?
print on console

Q 54. Write a command to erase all files in the current directory including all its subdirectories.
Rm –r *

Q 55. Which command is used for remote login?
Ssh  

Q 56. Which command determines the IP address and domain name?
nslookup  

Q 57. What is the importance of $#? (arguments)
Q 58. How do you find status of the last command executed? (meaning of 0 & 1)
$?
Q 59. Name the command that is used to take the backup?
Q 60. difference between $$ and $!?	
Q 61. If-Else condition in Shell Scripting?
Q 62. How to write a function in BASH Shell?
Q 63. What is the importance of PIPE command in Unix?
Allow you to concatenate commands 

Q 64. WHILE & FOR loop and CASE statement in Shell?
Q 65. Why we use Break & Continue is Shell Scripting?
Q 66. Operators in UNIX Shell Scripting?

 
PLSQL Support Interview questions-
Q 1. What is Procedure?
Q 2. Syntax of writing Procedure and its Parts? (Procedure Specification & Procedure Body)
Q 3. Defining Parameter and Procedure Modes?
Q 4. What is Function in PLSQL?
Q 5. Difference between Procedure and Function? (Important)
Q 6. What is Trigger and it’s Types?
Q 7. Syntax and Components of Database Triggers? (Timing🡪 Event 🡪 Type 🡪 Body)
Q 8. What is Cursor?
Q 9. Types of Cursor with explanation?
Q 10. Basic Syntax of writing Cursor?


 
JAVA Support Interview questions-

Q 1. What do -Xmx and -Xms parameters mean? (Heap Size)
Q 2. What is the difference between JVM and JRE?
Q 3. What is the difference between JVM and JRE?
Q 4. How do you take a thread dump of a Java process?
Q 5. What is OutOfMemoryError in Java? How do you deal with that?
Q 6. What is the Garbage Collector?
Q 7. What is JDBC?
Q 8. What is the database connection pool?
Database connection pooling is a method used to keep database connections open so they can be reused by others.
Q 9. Your Java application is connected to a Database via a connection pool. Suddenly your database goes down? Is that an issue with your Java application? Do you need to restart your Java application?

Q 10. What is the difference between HTTP and HTTPS?

Q 11. Your Java application is connecting to another Java application (server) running on the remote host and listening on port 17865. Now, you don't have access to that remote host to go and see if the process is running. How do you find if the server is up and running? (telnet)

Q 12. What is deadlock? How do you find if your Java program has a deadlock? 
Q 13. How do you send a web service request from Linux? (curl and wget)
Q 14. How do you check how much memory and CPU your Java process is consuming?
Q 15. How do you start and stop Tomcat in Linux?
Q 16. How do you check your Java process is running on Linux? (ps -ef | grep java)


 
Application Support Questions –


Q 1. Explain the ITIL Process in your Day-to-Day activity? (Service Mgt. Incident Mgt, Problem Mgt, Change Mgt, Knowledge Mgt.)
Q 2. Knowledge of Job scheduler, Alert management & Server monitoring
Q 3. What is PROBLEM ticket?
Q 4. What is the condition of a P1 ticket and how do you handle it?
Q 5. How to create and implement E- change.
Q 6. Prioritizing the issue among (application down, database stuck, batch failure)
Q 7. How do you handle if customer reported that application is not opening?
Q 8. How do you handle if any job (which is loading the data to database) is running for long time than usual? (possibilities)
Q 9. What are the reasons of application stuck/not working and how do you handle it? (What is the possible checks you will do)
Q 10. Tell any priority issue which you have recently resolved
